---
- hosts: aws_hosts_docker
  become: true
  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
    
    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - virtualenv
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true


- hosts: redis
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Pull image redis
      command: docker pull redis:7.0

    - name: delete redis
      command: docker rm --force redis

    - name: Run redis
      shell: |
        sudo docker run -d --name redis -p 6379:6379 redis:7.0


- hosts: users_api
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Pull image users-api
      command: docker pull josehenaoo/users-api:latest

    - name: delete users-api
      command: docker rm --force users-api

    - name: Run users-api
      shell: |
        sudo docker run --rm --name users-api -d -p 8083:8083 \
        --env JWT_SECRET=PRFT \
        --env SERVER_PORT=8083 \
        josehenaoo/users-api:latest


- hosts: auth_api
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Pull image auth-api
      command: docker pull josehenaoo/auth-api:latest

    - name: delete auth-api
      command: docker rm --force auth-api

    - name: Run auth-api
      shell: |
        sudo docker run --rm --name auth-api -d -p 8000:8000 \
        --env JWT_SECRET=PRFT \
        --env AUTH_API_PORT=8000 \
        --env USERS_API_ADDRESS=http://{{ users_api }}:8083 \
        josehenaoo/auth-api:latest


- hosts: todos_api
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Pull image todos-api
      command: docker pull josehenaoo/todos-api:latest

    - name: delete todos-api
      command: docker rm --force todos-api

    - name: Run todos-api
      shell: |
        sudo docker run --rm --name todos-api -d -p 8082:8082 \
        --env REDIS_CHANNEL=log_channel \
        --env TODO_API_PORT=8082 \
        --env JWT_SECRET=PRFT \
        --env REDIS_HOST={{ redis }} \
        --env REDIS_PORT=6379 \
        josehenaoo/todos-api:latest


- hosts: frontend
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Pull image frontend
      command: docker pull josehenaoo/frontend:latest

    - name: delete frontend
      command: docker rm --force frontend

    - name: Run frontend
      shell: |
        sudo docker run --rm --name frontend -d -p 8080:8080 \
        --env AUTH_API_ADDRESS=http://{{ auth_api }}:8000 \
        --env TODOS_API_ADDRESS=http://{{ todos_api }}:8082 \
        --env PORT=8080 \
        josehenaoo/frontend:latest


- hosts: log_message_processor
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Pull image log-message-processor
      command: docker pull josehenaoo/log-message-processor:latest

    - name: delete log-message-processor
      command: docker rm --force log-message-processor

    - name: Run log-message-processor
      shell: |
        sudo docker run --rm --name log-message -d \
        --env REDIS_CHANNEL=log_channel \
        --env REDIS_PORT=6379 \
        --env REDIS_HOST={{ redis }} \
        josehenaoo/log-message-processor:latest
